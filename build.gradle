plugins {
    id 'io.micronaut.application' version '4.5.3'
    id 'com.gradleup.shadow' version '8.3.6'
    id 'io.micronaut.aot' version '4.5.3'
}

version = '0.1'
group = 'example.micronaut'

repositories {
    mavenCentral()
}

dependencies {
    // Annotation processors
    annotationProcessor "io.micronaut:micronaut-inject-java"
    annotationProcessor "io.micronaut:micronaut-graal"
    annotationProcessor "io.micronaut.validation:micronaut-validation-processor"
    annotationProcessor "io.micronaut.security:micronaut-security-annotations"
    annotationProcessor "io.micronaut.data:micronaut-data-processor"

    // Micronaut core
    implementation "io.micronaut:micronaut-inject"
    implementation "io.micronaut.validation:micronaut-validation"

    // Micronaut security
    implementation "io.micronaut.security:micronaut-security"
    implementation "io.micronaut.security:micronaut-security-jwt"

    // Micronaut data + PostgreSQL
    implementation "io.micronaut.data:micronaut-data-jdbc"
    implementation "io.micronaut.sql:micronaut-jdbc-hikari"
    implementation "io.micronaut.data:micronaut-data-hibernate-jpa"
    implementation "io.micronaut.data:micronaut-data-jpa"
    implementation "org.postgresql:postgresql"

    // Micronaut GraphQL
    implementation "io.micronaut.graphql:micronaut-graphql"

    // Reactor
    implementation "io.projectreactor:reactor-core"

    // Logging
    runtimeOnly "ch.qos.logback:logback-classic"

    // Testing
    testImplementation "io.micronaut.test:micronaut-test-junit5"
    testImplementation "org.junit.jupiter:junit-jupiter-api"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine"

    // BCrypt
    implementation 'org.mindrot:jbcrypt:0.4'

    // jaxon
    implementation "io.micronaut:micronaut-jackson-databind"
    implementation("io.micronaut:micronaut-http-client")
}

application {
    mainClass.set('example.micronaut.Application')
}

java {
    sourceCompatibility = JavaVersion.VERSION_21
    targetCompatibility = JavaVersion.VERSION_21
}

micronaut {
    runtime 'netty'
    testRuntime 'junit5'
    processing {
        incremental true
        annotations 'example.micronaut.*'
    }
    aot {
        optimizeServiceLoading = true
        convertYamlToJava = true
        precomputeOperations = true
    }
}

graalvmNative {
    toolchainDetection = false
    binaries {
        main {
            imageName = 'mn-graalvm-application'
            useFatJar = true
            buildArgs.add('--no-fallback')
            buildArgs.add('--enable-url-protocols=https')
        }
    }
}

tasks.named('dockerfileNative') {
    jdkVersion.set('21')
}
